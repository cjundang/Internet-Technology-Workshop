1. Installation
===============
1.1 Preparation
---------------
sudo apt-get update
sudo apt-get upgrade
sudo apt-get remove docker docker-engine docker.io
sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update

1.2 Installation
----------------
sudo apt-get install docker-ce
docker -v
sudo docker version

2. Using exists container
=========================
sudo -s
docker images
docker image pull labdocker/alpine:latest	
docker image pull labdocker/alpineweb:latest
docker image pull labdocker/cadvisor:latest
docker images
docker image ls 
docker image pull labdocker/ubuntu:latest

3. Create Push images
=====================
1. access url: http://hub.docker.com and register
2. create repository name alpineweb
3. Tag image to your account name: 
    sudo docker image tag labdocker/alpineweb:latest <account>/alpineweb:latest
4. Login to hub.docker.com via step below
	4.1 docker login
	4.2 input username/password
	4.3 docker image push <account>/alpineweb:latest
	4.4 docker logout

4. Run Conatainer
=================
4.1. Interactive NODEJS
-----------------------
1.run docker on interactive mode with command (Remark: For windows. Please make all command with the same line)

	sudo docker container run  -i -t --rm --name nodejs -p 3000:3000 labdocker/alpineweb:latest

	*Result: ==> Server running at http://0.0.0.0:3000/

2. open browser with url: http://<Public IP>:3000

3. open another session and press command: "docker container ps"
	*Result: 
	-----------------------------------------------------------------
CONTAINER ID        IMAGE                        COMMAND             CREATED             STATUS              PORTS                    NAMES
50d477721bde        labdocker/alpineweb:latest   "node hello.js"     4 minutes ago       Up 4 minutes        0.0.0.0:3000->3000/tcp   nodejs
	-----------------------------------------------------------------

4. Terminate container with command:
        docker container stop nodejs

5. With option "--rm" so it will remove all container after finished work

4.2. Detach NODEJS
------------------
1. run docker on detach mode with command

	docker container run -d -t --name nodejs -p 3000:3000 labdocker/alpineweb:latest

2. open browser with url: http://<Public IP>:3000

3. access shell to container with command: 
    
    docker container exec -i -t nodejs sh

4. With command: "docker container ps"
	*Result:
	-----------------------------------------------------------------
CONTAINER ID        IMAGE                        COMMAND             CREATED             STATUS              PORTS                    NAMES
e0790d46c800        labdocker/alpineweb:latest   "node hello.js"     6 seconds ago       Up 5 seconds        0.0.0.0:3000->3000/tcp   nodejs
	-----------------------------------------------------------------

5. Try stop/start docker with command: 
    docker container stop nodejs
    docker container ps -a
    docker container start nodejs

6. After finished to stop container. We will remove docker container with command:
	docker container rm nodejs

4.3 Detach PYTHON
-----------------

1. run docker on detach mode with command

	docker container run  -d -t --name python -p 5000:5000 labdocker/cluster:webservicelite

2. open browser with url: http://<Public IP>:5000

3. access shell to container with command:
    docker container exec -i -t python sh

4. Stop container and cleanup by command:
	docker container stop python
	docker container rm python
